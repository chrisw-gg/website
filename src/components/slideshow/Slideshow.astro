---

import { Image } from 'astro:assets';

import Arrow from './Arrow.astro'
import Pagination from './pagination/Pagination.astro'

const { images } = Astro.props;

---

<div class='slideshow'>

    <div class='swiper'>

        <Arrow type='left' />

        <div class='swiper-wrapper'>

            {images.map(image => (
                <Image src={image} alt='' layout='constrained' class="swiper-slide" />
            ))}

        </div>

        <Arrow type='right' />

    </div>

    <Pagination images={images} />

</div>

<style lang='scss'>

    @use '/src/css/layout.scss' as *;

    .slideshow {

        margin: 40px 0px;

        .swiper, img {
            
            overflow: hidden;

            max-height: calc(100vh - 50px); /* don't allow images on mobile landscape to be larger than the height of the phone (plus ~50 pixels for pagination and margins) */
            max-width: min(100vw, 750px);
            aspect-ratio: auto 1024 / 768; /* This must be set explicitly so the swiper is a consistent size */

            @media (min-width: $content_width) {
                border-radius: 20px;
            }
        
        }

        img {
            object-fit: contain;
        }

    }

</style>

<script>

    import Swiper from 'swiper';
    import { Navigation, Pagination } from 'swiper/modules';

    import 'swiper/css'

    document.querySelectorAll('.slideshow').forEach(slideshow => {

        const swiperElement = slideshow.querySelector('.swiper');

        const swiper = new Swiper(swiperElement, {
            modules: [ Navigation, Pagination ],
            grabCursor: true,
            centeredSlides: true,
            slidesPerView: 1,
            spaceBetween: 25
        });

        // Navigation

        const leftArrow = slideshow.querySelector('.arrow.left');
        const rightArrow = slideshow.querySelector('.arrow.right');

        swiper.on('progress', function (swiper, progress) {
            const leftArrowActive = progress > 0 ? 'true' : 'false';
            const rightArrowActive = progress < 1 ? 'true' : 'false';

            leftArrow.setAttribute('active', leftArrowActive);
            rightArrow.setAttribute('active', rightArrowActive);
        });

        // Pagination

        const pagination = slideshow.querySelector('.pagination');
        const pacman = slideshow.querySelector('.pacman');
        
        swiper.on('progress', function (swiper, progress) {
            const x = -(pagination.offsetWidth/2) + pagination.offsetWidth * progress;
            pacman.style.transform = `translateX(${x}px)`;
        });

    });

</script>